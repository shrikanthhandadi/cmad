pipeline{
    
    agent none
    
    stages{
        stage('build'){
		    agent{
		          docker{
		            image 'gradle:5.5.0-jdk8'
		            //args '-v $HOME/.gradle:/home/gradle/.gradle'
		          }

		    }
            steps{
                echo 'Building CCS app'
                dir('connected-car-service'){
					sh 'gradle build -x test'
				}
            }
        }
        stage('test'){
		    agent{
		          docker{
		            image 'gradle:5.5.0-jdk8'
		          }

		    }
            steps{
                echo 'Running unit tests on CCS app'
                dir('connected-car-service'){
					sh 'gradle test'
				}
            }
        }
        stage('package'){
			//when { branch "master"}
		    agent{
		          docker{
		            image 'gradle:5.5.0-jdk8'
		          }

		    }
            steps{
                echo 'Running package CCS app'
                dir('connected-car-service'){
					sh 'gradle bootJar -x test'
					archiveArtifacts artifacts: 'build/libs/**/*.jar', fingerprint: true
				}
            }
        }
		
		stage('docker-package'){
			//when { branch "master"}
		          agent any
		          steps{
		            echo 'Packaging CCS app with docker'
		            script{
		              docker.withRegistry('https://index.docker.io/v1/', 'docker-login') {
		                  def ccsImage = docker.build("shrikanthhandadi/ccs:v${env.BUILD_ID}", "./connected-car-service")
		                  ccsImage.push()
		                  ccsImage.push("latest")
		              }
		            }
		          }
		}
			  
	  	stage('deploy'){
			//when { branch "master"}
	  		    agent any
	  		          steps{
	  		            script{
	  		              echo 'Deploy (deliver) docker app'
						  sh 'docker-compose -f ./connected-car-service/docker-compose.yml up -d'
	  		            }
	  		  }
	  	}
			  
			  
    }
    
    post{
        always{
            echo 'In the post block of pipeline'
        }
        
    }
    
}
